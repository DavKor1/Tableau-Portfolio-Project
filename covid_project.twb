<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Tabelle1 (tableau_table_1)' inline='true' name='federated.1olh5od0hkds0i18ibf8s17fkrfg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau_table_1' name='excel-direct.1foz97w1vv5f89162v9b71skgpka'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/davyd/OneDrive - Students RWTH Aachen University/portfolio_projects/2/data/tableau_table_1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1foz97w1vv5f89162v9b71skgpka' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1foz97w1vv5f89162v9b71skgpka' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_3B3562228ED04788B63255DF366630DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_3B3562228ED04788B63255DF366630DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_3B3562228ED04788B63255DF366630DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tabelle1' datatype='table' name='[__tableau_internal_object_id__].[Tabelle1_3B3562228ED04788B63255DF366630DB]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tabelle1' id='Tabelle1_3B3562228ED04788B63255DF366630DB'>
            <properties context=''>
              <relation connection='excel-direct.1foz97w1vv5f89162v9b71skgpka' name='Tabelle1' table='[Tabelle1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tabelle2 (tableau_table_2)' inline='true' name='federated.0yh3m7d18cq0tv1btbpnw18c3z8q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau_table_2' name='excel-direct.1elvbpm0l41sx91c6ixs01cb351e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/davyd/OneDrive - Students RWTH Aachen University/portfolio_projects/2/data/tableau_table_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1elvbpm0l41sx91c6ixs01cb351e' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1elvbpm0l41sx91c6ixs01cb351e' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_228FC5ECFDD7465994F5561A84282082]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_228FC5ECFDD7465994F5561A84282082]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tabelle1' datatype='table' name='[__tableau_internal_object_id__].[Tabelle1_228FC5ECFDD7465994F5561A84282082]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tabelle1' id='Tabelle1_228FC5ECFDD7465994F5561A84282082'>
            <properties context=''>
              <relation connection='excel-direct.1elvbpm0l41sx91c6ixs01cb351e' name='Tabelle1' table='[Tabelle1$]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tabelle3 (tableau_table_3)' inline='true' name='federated.1flx9l30f3ozng19u5qbl1kj8mz3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau_table_3' name='excel-direct.0qidm5m0aez6eg1cnz2jx0sw6qgc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/davyd/OneDrive - Students RWTH Aachen University/portfolio_projects/2/data/tableau_table_3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0qidm5m0aez6eg1cnz2jx0sw6qgc' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0qidm5m0aez6eg1cnz2jx0sw6qgc' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_EE09072ACA4249A29128817B5E5170DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_EE09072ACA4249A29128817B5E5170DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_EE09072ACA4249A29128817B5E5170DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_EE09072ACA4249A29128817B5E5170DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tabelle1' datatype='table' name='[__tableau_internal_object_id__].[Tabelle1_EE09072ACA4249A29128817B5E5170DA]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tabelle1' id='Tabelle1_EE09072ACA4249A29128817B5E5170DA'>
            <properties context=''>
              <relation connection='excel-direct.0qidm5m0aez6eg1cnz2jx0sw6qgc' name='Tabelle1' table='[Tabelle1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tabelle4 (tableau_table_4)' inline='true' name='federated.1h57bdm1859qui16b16nl1alhz81' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau_table_4' name='excel-direct.06gebx00xotkb11f7lcz90vurwge'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/davyd/OneDrive - Students RWTH Aachen University/portfolio_projects/2/data/tableau_table_4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.06gebx00xotkb11f7lcz90vurwge' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.06gebx00xotkb11f7lcz90vurwge' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_528EA17562394F4A9F90E9B655455320]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_528EA17562394F4A9F90E9B655455320]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_528EA17562394F4A9F90E9B655455320]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_528EA17562394F4A9F90E9B655455320]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Tabelle1_528EA17562394F4A9F90E9B655455320]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Location' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Tabelle1' datatype='table' name='[__tableau_internal_object_id__].[Tabelle1_528EA17562394F4A9F90E9B655455320]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F1:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Tabelle1' id='Tabelle1_528EA17562394F4A9F90E9B655455320'>
            <properties context=''>
              <relation connection='excel-direct.06gebx00xotkb11f7lcz90vurwge' name='Tabelle1' table='[Tabelle1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tabelle1 (tableau_table_1)' name='federated.1olh5od0hkds0i18ibf8s17fkrfg' />
          </datasources>
          <datasource-dependencies datasource='federated.1olh5od0hkds0i18ibf8s17fkrfg'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1olh5od0hkds0i18ibf8s17fkrfg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1olh5od0hkds0i18ibf8s17fkrfg].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1olh5od0hkds0i18ibf8s17fkrfg].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1olh5od0hkds0i18ibf8s17fkrfg].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1olh5od0hkds0i18ibf8s17fkrfg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1olh5od0hkds0i18ibf8s17fkrfg].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1olh5od0hkds0i18ibf8s17fkrfg].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1olh5od0hkds0i18ibf8s17fkrfg].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1olh5od0hkds0i18ibf8s17fkrfg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1olh5od0hkds0i18ibf8s17fkrfg].[:Measure Names]' value='149' />
            <format attr='height' value='71' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.1olh5od0hkds0i18ibf8s17fkrfg].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.1olh5od0hkds0i18ibf8s17fkrfg].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00557f' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1olh5od0hkds0i18ibf8s17fkrfg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.813093900680542' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1olh5od0hkds0i18ibf8s17fkrfg].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AEBB679E-05BF-4B23-9ECD-38DCDE89FE12}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tabelle2 (tableau_table_2)' name='federated.0yh3m7d18cq0tv1btbpnw18c3z8q' />
          </datasources>
          <datasource-dependencies datasource='federated.0yh3m7d18cq0tv1btbpnw18c3z8q'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yh3m7d18cq0tv1btbpnw18c3z8q].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Low income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0yh3m7d18cq0tv1btbpnw18c3z8q].[none:location:nk]' direction='DESC' using='[federated.0yh3m7d18cq0tv1btbpnw18c3z8q].[sum:TotalDeathCount:qk]' />
          <slices>
            <column>[federated.0yh3m7d18cq0tv1btbpnw18c3z8q].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0yh3m7d18cq0tv1btbpnw18c3z8q].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='10000000.0' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0yh3m7d18cq0tv1btbpnw18c3z8q].[none:location:nk]' value='123' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.0434806346893311' />
                <format attr='mark-color' value='#00557f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yh3m7d18cq0tv1btbpnw18c3z8q].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0yh3m7d18cq0tv1btbpnw18c3z8q].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{178FD18D-4871-4DA3-AC78-CBD2412C4176}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tabelle3 (tableau_table_3)' name='federated.1flx9l30f3ozng19u5qbl1kj8mz3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1flx9l30f3ozng19u5qbl1kj8mz3'>
            <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[HighestInfectionCount]' derivation='Sum' name='[sum:HighestInfectionCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[Longitude (generated)]' field-type='quantitative' max='18743995.183333326' min='-18553805.409518968' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[Latitude (generated)]' field-type='quantitative' max='16897493.353088807' min='-5182804.8824393926' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[sum:PercentPopulationInfected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[sum:HighestInfectionCount:qk]' />
              <lod column='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[none:Location:nk]' />
              <geometry column='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[Latitude (generated)]</rows>
        <cols>[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{30EC9E73-AD0C-43AA-B603-2FC489B8E397}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tabelle4 (tableau_table_4)' name='federated.1h57bdm1859qui16b16nl1alhz81' />
          </datasources>
          <datasource-dependencies datasource='federated.1h57bdm1859qui16b16nl1alhz81'>
            <column caption='Location' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Max' name='[max:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1h57bdm1859qui16b16nl1alhz81].[tmn:date:qk]' scope='cols' value='Month' />
            <format attr='height' field='[federated.1h57bdm1859qui16b16nl1alhz81].[tmn:date:qk]' value='48' />
            <format attr='title' class='0' field='[federated.1h57bdm1859qui16b16nl1alhz81].[max:PercentPopulationInfected:qk]' scope='rows' value='Percent Population Infected' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1h57bdm1859qui16b16nl1alhz81].[tmn:date:qk]' value='86' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]' />
              <text column='[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]' />
              <text column='[federated.1h57bdm1859qui16b16nl1alhz81].[avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h57bdm1859qui16b16nl1alhz81].[max:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1h57bdm1859qui16b16nl1alhz81].[tmn:date:qk]</cols>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1h57bdm1859qui16b16nl1alhz81].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1h57bdm1859qui16b16nl1alhz81].[max:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1h57bdm1859qui16b16nl1alhz81].[max:PercentPopulationInfected:qk]</field>
                  <field>[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]</field>
                  <field>[federated.1h57bdm1859qui16b16nl1alhz81].[tmn:date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>46.105109473641797</value>
                <value>&quot;Germany&quot;</value>
                <value>#2023-08-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
            <label-position x='19' y='10' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{8713F481-888B-4D01-B72E-3AFDA5C9D1F0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98170' id='9' param='horz' type-v2='layout-flow' w='98892' x='554' y='915'>
            <zone h='98170' id='7' type-v2='layout-basic' w='87819' x='554' y='915'>
              <zone h='22655' id='3' name='Sheet 1' w='43910' x='554' y='915'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='75515' id='5' name='Sheet 2' w='43910' x='554' y='23570'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49085' id='6' name='Sheet 3' w='43909' x='44464' y='915'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49085' id='11' name='Sheet 4' show-title='false' w='43909' x='44464' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98170' id='13' is-fixed='true' type-v2='layout-basic' w='11073' x='88373' y='915'>
              <zone h='49085' id='8' param='vert' type-v2='layout-flow' w='11073' x='88373' y='915'>
                <zone h='8352' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11073' x='88373' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='49085' id='14' param='vert' type-v2='layout-flow' w='11073' x='88373' y='50000'>
                <zone fixed-size='745' h='49085' id='12' is-fixed='true' name='Sheet 4' pane-specification-id='2' param='[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]' type-v2='color' w='11073' x='88373' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98170' id='15' param='vert' type-v2='layout-flow' w='98892' x='554' y='915'>
                <zone fixed-size='174' h='22655' id='3' is-fixed='true' name='Sheet 1' w='43910' x='554' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49085' id='6' is-fixed='true' name='Sheet 3' w='43909' x='44464' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8352' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11073' x='88373' y='915'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='75515' id='5' is-fixed='true' name='Sheet 2' w='43910' x='554' y='23570'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49085' id='11' is-fixed='true' name='Sheet 4' show-title='false' w='43909' x='44464' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='745' h='49085' id='12' name='Sheet 4' pane-specification-id='2' param='[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]' type-v2='color' w='11073' x='88373' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C8886E3B-9DEF-41D9-913B-BC2691D584EF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='128'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1olh5od0hkds0i18ibf8s17fkrfg].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26E6B973-13A1-4562-A7A9-70D6E95F648F}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yh3m7d18cq0tv1btbpnw18c3z8q].[none:location:nk]</field>
            <field>[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3FED59C4-56B0-400C-950A-6F1627A471DE}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1flx9l30f3ozng19u5qbl1kj8mz3].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A3014A7B-8D3A-47DC-9087-13FA56FA87F9}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='2' param='[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1h57bdm1859qui16b16nl1alhz81].[max:PercentPopulationInfected:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]</field>
            <field>[federated.1h57bdm1859qui16b16nl1alhz81].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CE3450D-807A-4EA4-B9D4-13D8B29C72A8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1h57bdm1859qui16b16nl1alhz81].[none:F1:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{EB3C16EB-AFF2-41BB-81CD-7E1D3777E39A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='68' name='Sheet 1' width='192'>
      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
      Xn755T5jkySJGTNmsHLlSrZu3cpjjz1GbGwstbW1rFu3juLi4lBcDocDv9+P0+lk9erVHDt2
      DLfbjUqlori4mLlz54Y6msvlQqFQ9Dgr6nQ6ZFnG4XCQmpraY1wD8WU0Gpk+fTpff/01Tz/9
      NKNHjyYQCPDrr7+yZ88eFixYEGoDm83W64BgNBqx2+14vd477r3xP/74A71ez4gRI26OAFwu
      F8uXL6ekpIQHHnggor3f78fr9aLX6ykpKQlbLZJlmU2bNrFjxw4WLlxIeno67733HuXl5Sxb
      tiy0+mEymSgpKcHlcpGQ0PMW5wqFAqPRSH5+Pvv37+fo0aNMmjSpzwu7jo4OZFkmKSkp1GHV
      ajUJCQm0tLQQCASQJAmv14ssy1gsFkaPHt2tjvfff5/p06czfvz4/jRhnwzElyzLodWca9Og
      q59tNtt/Hc/tzL59+/jll19YtmwZarX65gjg2LFjKJXKiPn8VeLj40lKSupx5L46/e7evTs0
      +igUCoqLiykuLg6z7ezspLKystcVlJiYGMxmM7Nnz6awsJCPP/6YjIyMXlen2tvbWb9+PbNn
      zw4TckZGBosXL2bFihUcOHCAiRMnkpycjEKhwGazdVvG1Ov1mEymUGqm1WoJBoMEAoFuPp1O
      J5Ik9ZizX2Ugvk6cOEF5eTlvvvlmyDYmJoYxY8ZgNBr5/PPPGTRoEOnp6RiNRjo7O3v0abPZ
      MBgM/UpRbxfcbjdlZWWUlJSg1V7+e6Abfg3g9XopKytj3LhxIaf9YciQIVRVVfV5URqJ5uZm
      ZFkOpSV9YTabyczM5PTp033WFwgEyMnJ6XZOrVZzzz33cPz4ceBy6pKYmMhff/0V0Xd6enoo
      7bue+vp61Go1Ol3v27sPxNfZs2cxm8093ltIS0sjLi6O2tpaAPLy8qitrQ2tol1FlmVqamrI
      ysr6R8ugt4qqqio8Hg/3339/6NgNj/7kyZO0t7cPeKofNWoUbW1tWK3WsOOyLHP8+HGys7P7
      zD19Ph+7du1i2LBhoR/b7/fT220Pr9dLR0cHSUlJvdap0+nw+XzU1dX1WL6qqiqUM6tUKh58
      8EEqKiro6OgIs7XZbNTX15ObmwtcvhGXkpLCgQMHwi4qfT4fBw4coKCgoM/vOhBfSUlJNDQ0
      hFarrqWpqQmHwxFqA4vFgs1mo7q6upvdxYsXu6VbtzNer5fdu3dTVFQUlhHcUAF4vV5KS0sp
      Li7u827moUOHWLhwYVhDp6en88gjj7Bu3Tr++OMPgsEgHo+HrVu3UlNTw6OPPhqy3bNnD3v3
      7g2tX9tsNtavX4/dbufxxx8P2f3++++89dZblJeXhy1XNjU18emnnyLLcliatm3bNl5//fVQ
      XmwymSgqKmLdunVUVlbi9/tD5a/6KyoqCpUfP348qamprFmzJnR/obGxkbVr15Kdnc29994L
      gFKpZNasWRw8eJCff/4Zv9+Px+Nhw4YNOBwOHnrooVCdbrebd999l1WrVoW1YX99XRXTmjVr
      qK2tRZZl/H4/p06d4rPPPmPYsGGhGS49PZ3Jkyfz5Zdfhla+6uvrWb16NaNGjerXzHq7cOrU
      KZxOJ4WFhWHHb+g1QHV1NQ6Hg3Hjxv2j8pMmTSI5OZmNGzfy0UcfIUkSI0eO5I033ghbERkz
      Zgxbtmxhy5YtuN1utFotEyZMYMmSJcTFxYXsxo4di0KhoLS0lI0bN4bya4PBwKRJk5g2bVpo
      taQnJEli5syZDBkyhB9++IE1a9YQDAZD/t5+++2w8mq1mpdeeoldu3bxzjvv4HK50Gq1TJs2
      rdujBNnZ2SxdupS1a9eyYcOG0KMQr776Knq9PmJb9deXVqtl6dKl7N27lw8++ACbzYYkSaSm
      pjJz5kyKiorC7pVMmzYNnU7HypUruz0KcaekPz6fj7KyMsaOHdttIL7pj0IIBLfLoxAgngYV
      RDlCAIKoRghAENUIAQiiGiEAQVQjBCCIaoQABFGNEIAgqhECEEQ1QgCCqEYIQBDV/Aez5zY6
      0CozmwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
